name: Docker Image CI

on:
  push:
    branches: [ "Lab5_6" ]
  pull_request:
    branches: [ "Lab5_6" ]

jobs:

  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: the Docker build
      run: docker swarm init && docker compose -f docker-composeHW.yml up -d --wait 
  
  test:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - uses: actions/checkout@v4
      name: the test 

    - name: Setup Python 3.12.1
      uses: actions/setup-python@v4
      with:
        python-version: 3.12.1

    - name: Install python
      run: |
        python -m pip install --upgrade pip
        pip install pytest
        pip install pytest-selenium
        pip install psycopg2
        pip install flask
        pip install flask_cors
        pip install prometheus-flask-exporter
        pip install paho-mqtt 
        pip install redis

    - name: Tested rule_engine
      run: |
        pytest ./Rule/rule_test.py::test_isCreated_DB_table_exists
        pytest ./Rule/rule_test.py::test_Insert_DB

    - name: Tested server_rule
      run: |
        pytest ./Server/server_test.py::test_jsoncreat
        pytest ./Server/server_test.py::test_get_endpoint
        pytest ./Server/server_test.py::test_post_endpoint

  docker_push:
    name: docker_push
    needs: test
    runs-on: ubuntu-latest

    steps:
    - name: Build the Docker image
      uses: actions/checkout@v4

    - name: Set Docker tag
      id: vars
      run: echo "TAG=1.0.0" >> $GITHUB_ENV

    - name: Build Server_rule
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/arhet:server.${{ env.TAG }} ./Server

    - name: Build Rule_engine
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/arhet:engine.${{ env.TAG }} ./Rule  

    - name: Login Docker
      uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Export IOT_Server
      run: |
        docker push ${{ secrets.DOCKER_USERNAME }}/arhet:server.${{ env.TAG }}   

    - name: Export Rule_engine
      run: |
        docker push ${{ secrets.DOCKER_USERNAME }}/arhet:engine.${{ env.TAG }}
    